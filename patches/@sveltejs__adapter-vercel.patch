diff --git a/index.js b/index.js
index d4ec606663b0e2bdbd0b1a3f5a3e4bdf38323020..5a8ef7e960a3676d48d28c11b58340d42f99e559 100644
--- a/index.js
+++ b/index.js
@@ -634,39 +634,15 @@ function static_vercel_config(builder, config, dir) {
 
 	// https://vercel.com/docs/deployments/skew-protection
 	if (process.env.VERCEL_SKEW_PROTECTION_ENABLED) {
-		routes.push({
-			src: '/.*',
-			has: [
-				{
-					type: 'header',
-					key: 'Sec-Fetch-Dest',
-					value: 'document'
-				}
-			],
-			headers: {
-				'Set-Cookie': `__vdpl=${process.env.VERCEL_DEPLOYMENT_ID}; Path=${builder.config.kit.paths.base}/; SameSite=Strict; Secure; HttpOnly`
-			},
-			continue: true
-		});
-
-		// this is a dreadful hack that is necessary until the Vercel Build Output API
-		// allows you to set multiple cookies for a single route. essentially, since we
-		// know that the entry file will be requested immediately, we can set the second
-		// cookie in _that_ response rather than the document response
-		const base = `${dir}/${builder.config.kit.appDir}/immutable/entry`;
-		const entry = fs.readdirSync(base).find((file) => file.startsWith('start.'));
-
-		if (!entry) {
-			throw new Error('Could not find entry point');
-		}
-
-		routes.splice(-2, 0, {
-			src: `/${builder.getAppPath()}/immutable/entry/${entry}`,
-			headers: {
-				'Set-Cookie': `__vdpl=; Path=/${builder.getAppPath()}/version.json; SameSite=Strict; Secure; HttpOnly`
-			},
-			continue: true
-		});
+		fs.writeFileSync(
+			`${builder.getClientDirectory()}/service-worker.js`,
+			`
+self.addEventListener("fetch", (event) => {
+  if (event.request.headers.has("x-deployment-id")) return;
+  event.respondWith(fetch(new Request(event.request, { headers: { "x-deployment-id": ${process.env.VERCEL_DEPLOYMENT_ID} } })));
+});
+		`.trim()
+		);
 	}
 
 	routes.push({
